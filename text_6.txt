Real Programmers Don’t Use Pascal 7
Looking to the future, some Real Programmers are concerned that the latest generation
of programmers are not brought up with the same outlook on life as their elders. Many
of them have nev er seen a computer with a front panel. Hardly anyone graduating
from school these days can do hex arithmetic without a calculator. Today’s college
graduates are soft—protected from the realities of programming by source level de-
buggers, text editors that count parentheses, and user-friendly operating systems.
Worst of all, some of these alleged computer scientists manage to get degrees without
ev er learning fortran! Are we destined to become an industry of Unix hackers and
Pascal programmers?
From my experience, I think it’s safe to report that the future is bright for Real Pro-
grammers. Neither os/370 nor fortran shows any signs of dying out, despite the ef-
forts of Pascal programmers. Even more subtle tricks, like adding structured coding
constructs to fortran, hav e failed. Oh sure, some computer vendors have come out
with fortran 77 compilers, but every one of them has a way of converting itself back
into a fortran 66 compiler at the drop of an option card—to compile do loops as God
intended.
Even Unix might not be as bad on Real Programmers as it once was. The latest release
of Unix has the potential of an operating system worthy of any Real Programmer. It
has two different and subtly incompatible user interfaces, an arcane and complicated
teletype driver, and virtual memory. If you ignore the fact that it’s structured, even
C programming can be appreciated by the Real Programmer. After all, there’s no type
checking, variable names are seven (10? Eight?) characters long, and the added bonus
of the Pointer data type is thrown in. That’s like having the best parts of fortran and
assembly language in one place, not to mention some of the more creative uses for
#define.
No, the future isn’t all that bad. Why, in the past few years, the popular press has even
commented on the bright new crop of computer nerds and hackers leaving places like
Stanford and MIT for the real world. From all evidence, the spirit of Real Program-
ming lives on in these young men and women. As long as there are ill-defined goals,
bizarre bugs, and unrealistic schedules, there will be Real Programmers willing to
jump in and solve the problem, saving the documentation for later. Long live for-
tran!
—Ed Post
Wilsonville, Oregon
(in: Datamation, July 1983, pp.263–265)